<apex:page docType="html-5.0" standardController="Account" lightningStylesheets="true">
<apex:includeScript value="{!URLFOR($Resource.jsFiles, 'jquery-1.7.1.min.js')}"/>
<apex:includeScript value="{!URLFOR($Resource.jsFiles, 'jquery-ui-1.8.18.custom.min.js')}"/>
<apex:includeScript value="{!URLFOR($Resource.jsFiles, 'jquery.maskedinput.min.js')}"/>
<apex:stylesheet value="{!URLFOR($Resource.JQueryUI, 'jquery-ui-1.11.2/jquery-ui.min.css')}"></apex:stylesheet>
<style>
    input{
        text-transform: capitalize;
    }
    .email{
        text-transform: lowercase;
    }
    .newContact {
        font-family: "ProximaNovaSoft-Regular", Calibri; 
        font-size: 110%;
        padding-top: 12px;
        width: 100%;
    }
    .newContact input[type=text],.newContact select {
        font-size: 18px;
        width: 100%;
        height: 35px;
        -webkit-appearance: none;
        margin: 4px 0;
        line-height: 21px;
        background-color: #fff;
        border: 1px solid #ddd;
        border-radius: 3px;
        outline: none;
    }
    .newContact textarea {
        font-size: 18px;
        width: 100%;
        -webkit-appearance: none;
        margin: 4px 0;
        line-height: 21px;
        background-color: #fff;
        border: 1px solid #ddd;
        border-radius: 3px;
        outline: none;
    }
    .newContact button {
        -webkit-appearance: button;
        border-radius: 3px;
        display: block;
        padding: 12px;
        margin: 4px 0;
        width: 100%;
        background: #eee;
        border: solid 1px #ccc;
        font-size: 18px;
    }
</style>
<apex:remoteObjects jsNamespace="RemoteObjectModel">
    <apex:remoteObjectModel name="Account" fields="Id, BillingStreet, BillingCity, BillingState, BillingPostalCode, BillingCountry" />
    <apex:remoteObjectModel name="Contact" fields="AccountId,Email,Salutation,Phone,FirstName,MiddleName,MobilePhone,LastName,Suffix__c,Title,Goes_By_Nickname__c,MailingStreet,MailingCity,MailingState,MailingPostalCode,MailingCountry"></apex:remoteObjectModel>
</apex:remoteObjects>
<div class="newContact">
    <div style="color: green; font-size: 0.8em;">
        *Please use the 'Create Contact' button at the bottom when ready to save
    </div>
    <div id="companyLabel">
        Company:
    </div>
    <input id="company" type="text" />
    <input id="companyId" type="hidden"/>
    Salutation:
    <select id="salutation">
        <option value=""></option>
        <option value="Mr.">Mr.</option>
        <option value="Mrs.">Mrs.</option>
        <option value="Ms.">Ms</option>
        <option value="Dr.">Ms</option>
    </select>
    First Name*:
    <input id="first" type="text" />
    Middle Name:
    <input id="middle" type="text" />
    Last Name*:
    <input id="last" type="text" />
    Suffix:
    <select id="suffix">
        <option value=""></option>
        <option value="Jr.">Jr.</option>
        <option value="Sr.">Sr.</option>
        <option value="||">||</option>
        <option value="|||">|||</option>
        <option value="|V">|V</option>
        <option value="V">V</option>
    </select>
    Title:
    <input id="title" type="text" />
    Goes By/Nickname:
    <input id="nickName" type="text" />
    Email:
    <input id="email" type="text" class="email" />
    Phone:
    <input id="phone" type="text" />
    Mobile:
    <input id="mobile" type="text" />
    <h4 style="display: block; margin-top: 10px; margin-bottom: 10px;">
        Address Information
    </h4>
    Mailing Street:
    <textarea id="street" type="text" />
    Mailing City:
    <input id="city" type="text" />
    Mailing State/Province
    <input id="state" type="text" />
    Mailing Zip/Postal Code
    <input id="postal" type="text" />
    Mailing Country
    <input id="country" type="text" />
    <button id="btnCreateContact" onclick="createContact()">Create Contact</button>
</div>
<script src="/soap/ajax/9.0/connection.js" type="text/javascript"></script>
<script>
        String.prototype.capitalize = function() {
            return this.replace(/\w\S*/g, function(txt){return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();});
        }
        $j = jQuery.noConflict();
        $j(document).ready(function () {
            DocumentReady();
        });      
        function createContact(){  
            $j("#btnCreateContact").attr('disabled','disabled');
            var contact = new RemoteObjectModel.Contact();
            var accountId = document.getElementById("companyId").value;
            var email = document.getElementById("email").value;
            var salutation = document.getElementById("salutation").value;
            var phone = document.getElementById("phone").value;
            var firstName = document.getElementById("first").value.capitalize();
            var middleName = document.getElementById("middle").value.capitalize();
            var mobile = document.getElementById("mobile").value;
            var lastName = document.getElementById("last").value.capitalize();
            var suffix = document.getElementById("suffix").value;
            var title = document.getElementById("title").value.capitalize();
            var nickName = document.getElementById("nickName").value.capitalize();  
            var street = document.getElementById("street").value;
            var city = document.getElementById("city").value.capitalize();
            var state = document.getElementById("state").value.toUpperCase();
            var postal = document.getElementById("postal").value;
            var country = document.getElementById("country").value;
            if(ValidateContactFields()){
                contact.create({AccountId: accountId, Email: email, Salutation: salutation, Phone: phone, FirstName: firstName, MiddleName: middleName, MobilePhone: mobile, LastName: lastName, Suffix__c: suffix, Title: title,Goes_By_Nickname__c: nickName,MailingStreet: street, MailingCity: city, MailingState:state, MailingPostalCode: postal, MailingCountry: country}, function(error, records) {
                if (error) {
                    alert(error.message);
                    $j("#btnCreateContact").removeAttr('disabled');
                } else {
                    sforce.one.navigateToSObject(records[0]);
                }
               });
            }
            else{
                alert('Missing Required Fields');
                $j("#btnCreateContact").removeAttr('disabled');
            }
        }
        function ValidateContactFields(){
            return $j("#companyId").val() != '' && $j("#last").val() != '' && $j("#first").val() != ''
        }
        function DocumentReady(){
            var url = document.URL;
            var accountId;
            if(url.indexOf('id=') >= 0){
                url = url.substring(url.indexOf('id=') + 3);
                accountId = url.substring(0,18);
                $j("#companyId").val(accountId);
                $j("#company,#companyLabel").hide();
                var account = new RemoteObjectModel.Account();
                account.retrieve({where: {Id: {eq: accountId }}}, function(err,records,event) {
                    //Fill In Address
                    $j("#street").val(records[0].get("BillingStreet"));
                    $j("#city").val(records[0].get("BillingCity"));
                    $j("#state").val(records[0].get("BillingState"));
                    $j("#postal").val(records[0].get("BillingPostalCode"));
                    $j("#country").val(records[0].get("BillingCountry"));
                }); 
            }
            var queryTerm, query, namepart01, namepart02;
            $j("#phone,#mobile").blur(function(){
                if($j(this).val().length == 10){
                    $j(this).mask("(999) 999-9999");
                }
            });
            $j("#phone,#mobile").focus(function(){
                $j(this).unmask(); 
            });
            $j("#company").autocomplete({
                minLength: 2,
                delay: 500,
                source: function(request, response) {
                    $j(".noResults").remove();
                    $j(".loadingResults").remove();
                    $j("#company").append('<span class="loadingResults" style="color: green;">Loading...</span>');
                        queryTerm = request.term;
                        queryTerm = queryTerm.trim();
                        if(queryTerm.indexOf(' ') > 0)
                        {
                            namepart01 = queryTerm.split(' ')[0];
                            namepart02 = queryTerm.split(' ')[1];
                        }
                        sforce.connection.sessionId = '{!$Api.Session_ID}';
                        if(namepart02 != "")
                            query = "SELECT Id, Name, BillingStreet, BillingCity, BillingState, BillingPostalCode, BillingCountry FROM Account WHERE (Name LIKE '" + queryTerm + "%' OR (Name LIKE '" + namepart01 + "%' AND Name LIKE '%" + namepart02 + "%')) ORDER BY Name LIMIT 50 ";
                        else
                            query = "SELECT Id, Name, BillingStreet, BillingCity, BillingState, BillingPostalCode, BillingCountry FROM Account WHERE Name LIKE '" + queryTerm + "%' ORDER BY Name LIMIT 50 ";
                        var lstSobjectResults = sforce.connection.query(query);
                        var result = [];
                        
                        if(parseInt(lstSobjectResults.size) > 0)
                        {   
                            if(lstSobjectResults.size == 1)
                            {
                                var JSONObject;
                                JSONObject = { "Id":lstSobjectResults.records.Id, "Name":lstSobjectResults.records.Name,"BillingStreet":lstSobjectResults.records.BillingStreet, "BillingCity":lstSobjectResults.records.BillingCity, "BillingState":lstSobjectResults.records.BillingState, "BillingPostalCode":lstSobjectResults.records.BillingPostalCode, "BillingCountry":lstSobjectResults.records.BillingCountry};
                                result[0] = JSONObject;
                            }
                            else
                            {
                                for(var i = 0; i < lstSobjectResults.records.length; i++ ) 
                                {
                                    var JSONObject;
                                    JSONObject = { "Id":lstSobjectResults.records[i].Id, "Name":lstSobjectResults.records[i].Name, "BillingStreet":lstSobjectResults.records[i].BillingStreet, "BillingCity":lstSobjectResults.records[i].BillingCity, "BillingState":lstSobjectResults.records[i].BillingState, "BillingPostalCode":lstSobjectResults.records[i].BillingPostalCode, "BillingCountry":lstSobjectResults.records[i].BillingCountry};                                          
                                    result[i] = JSONObject;
                                }
                            }
                           $j(".loadingResults").remove();
                           $j(".noResults").remove();
                        }
                        else{
                              $j(".loadingResults").remove();
                              $j(".noResults").remove();
                              $j("#company").append('<span class="noResults" style="color: red;">No Results Found</span>');
                        };
                    response(result);
                },
                focus: function( event, ui ) {
                    itemName = ui.item.Name;
                    $j(esc('#company')).val(itemName);
                    return false;
                    },
                select: function(event, ui) {
                    $j('#company').val( itemName );
                    $j('#companyId').val( ui.item.Id );
                    $j('#street').val(ui.item.BillingStreet);
                    $j('#city').val(ui.item.BillingCity);
                    $j('#state').val(ui.item.BillingState);
                    $j('#postal').val(ui.item.BillingPostalCode);
                    $j('#country').val(ui.item.BillingCountry);
                    return false;
                }
            }).data("autocomplete")._renderItem = function( ul, item ) {
                    var entry = "<a>" + item.Name;
                    entry = entry + "<i>" + (item.BillingCity === null ? '' : ' - ' + item.BillingCity) + (item.BillingState === null ? '' : ', ' + item.BillingState) + "</i>";  
                    entry = entry + "</a>";
                    entry = entry.replace(queryTerm, "<b>" + queryTerm + "</b>");
                    if(namepart02 != "")
                    {
                        entry = entry.replace(namepart01, "<b>" + namepart01 + "</b>");
                        entry = entry.replace(namepart02, "<b>" + namepart02 + "</b>");
                    }
                    return $j( "<li></li>" )
                        .data( "item.autocomplete", item )
                        .append( entry )
                        .appendTo( ul );                
             };
        }
        function esc(myid) {
           return '#' + myid.replace(/(:|\.)/g,'\\\\$1');
        }
</script>
</apex:page>